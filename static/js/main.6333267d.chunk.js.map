{"version":3,"sources":["api.ts","routes/Coins.tsx","routes/Price.tsx","atoms.ts","routes/CandleChart.tsx","routes/Coin.tsx","components/NavBar.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","a","fetch","then","response","json","coinId","Container","styled","div","Header","header","CoinsList","ul","Coin","li","props","theme","boxColor","textColor","accentColor","Title","h1","Loader","span","Img","img","Coins","useQuery","isLoading","data","Helmet","slice","map","coin","to","pathname","id","state","name","src","symbol","toLowerCase","Table","Row","TableHeader","Price","priceData","priceArray","desc","percent","percent_change_15m","percent_change_30m","percent_change_1h","percent_change_6h","percent_change_12h","percent_change_24h","percent_change_7d","percent_change_30d","percent_change_1y","row","style","color","isDarkAtom","atom","key","default","CandleChart","isDark","useRecoilValue","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","type","series","price","x","time_open","y","open","high","low","close","options","mode","title","text","align","chart","height","width","toolbar","autoSelected","show","zoom","enabled","background","grid","yaxis","xaxis","axisBorder","axisTicks","labels","stroke","Back","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","useParams","useLocation","priceMatch","useMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","refetchInterval","tickersLoading","tickersData","quotes","USD","loading","rank","toFixed","description","total_supply","max_supply","path","element","Head","Home","Toggle","button","NavBar","useRecoilState","setIsDarkAtom","onClick","prev","Router","darkTheme","bgColor","lightTheme","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.6333267d.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`\r\n\r\nexport async function fetchCoins(){\r\n    return  fetch(`${BASE_URL}/coins`).then(response=> response.json());\r\n}\r\n\r\nexport async function fetchCoinInfo(coinId:string){\r\n    return  fetch(`${BASE_URL}/coins/${coinId}`).then(response=> response.json());\r\n}\r\n\r\nexport async function fetchCoinTickers(coinId:string){\r\n    return  fetch(`${BASE_URL}/tickers/${coinId}`).then(response=> response.json());\r\n}\r\n\r\nexport function fetchCoinHistory(coinId:string){\r\n    const endDate = Math.floor(Date.now() / 1000);\r\n    const startDate = endDate - 60 * 60 *24 * 30;\r\n    return  fetch(`${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`).then(response=> response.json());\r\n}","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useQuery } from \"react-query\";\r\nimport { fetchCoins } from \"../api\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 20vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst CoinsList = styled.ul``;\r\n\r\nconst Coin = styled.li`\r\n  font-size: 20px;\r\n  background-color: ${(props) => props.theme.boxColor};\r\n  color: ${(props) => props.theme.textColor};\r\n  border-radius: 15px;\r\n  margin-bottom: 10px;\r\n  a {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 20px;\r\n    transition: color 0.2s ease-in;\r\n  }\r\n  &:hover {\r\n    a {\r\n      color: ${(props) => props.theme.accentColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 40px;\r\n  color: ${(props) => props.theme.accentColor};\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 35px;\r\n  height: 35px;\r\n  margin-right: 20px;\r\n`;\r\n\r\ninterface ICoinInterface {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\n\r\nfunction Coins() {\r\n  const { isLoading, data } = useQuery<ICoinInterface[]>(\r\n    \"allCoins\",\r\n    fetchCoins\r\n  );\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>COINS</title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>COINS</Title>\r\n      </Header>\r\n      {isLoading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <CoinsList>\r\n          {data?.slice(0, 100).map((coin) => (\r\n            <Coin key={coin.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `/${coin.id}`,\r\n                }}\r\n                state={{\r\n                  name: coin.name,\r\n                }}\r\n              >\r\n                <Img\r\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                />\r\n                {coin.name} &rarr;\r\n              </Link>\r\n            </Coin>\r\n          ))}\r\n        </CoinsList>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coins;\r\n","import styled from \"styled-components\";\r\n\r\nconst Table = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  width: 100%;\r\n  height: 300px;\r\n  background-color: ${(props) => props.theme.boxColor};\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  justify-items: center;\r\n`;\r\n\r\nconst TableHeader = styled.div`\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nfunction Price({ priceData }: any) {\r\n  const priceArray = [\r\n    { desc: \"15MIN\", percent: priceData.percent_change_15m },\r\n    { desc: \"30MIN\", percent: priceData.percent_change_30m },\r\n    { desc: \"1HOUR\", percent: priceData.percent_change_1h },\r\n    { desc: \"6HOUR\", percent: priceData.percent_change_6h },\r\n    { desc: \"12HOUR\", percent: priceData.percent_change_12h },\r\n    { desc: \"24HOUR\", percent: priceData.percent_change_24h },\r\n    { desc: \"7DAY\", percent: priceData.percent_change_7d },\r\n    { desc: \"30DAY\", percent: priceData.percent_change_30d },\r\n    { desc: \"1YEAR\", percent: priceData.percent_change_1y },\r\n  ];\r\n  const getColor = (percent: Number) => {\r\n    if (percent > 0) return \"DeepSkyBlue\";\r\n    else if (percent < 0) return \"Tomato\";\r\n    else return \"inherit\";\r\n  };\r\n\r\n  return (\r\n    <Table>\r\n      <Row>\r\n        <TableHeader>TIME PERIOD</TableHeader>\r\n        <TableHeader>CHANGE PERCENT</TableHeader>\r\n      </Row>\r\n\r\n      {priceArray.map((row) => {\r\n        return (\r\n          <Row key={row.desc}>\r\n            <div>{row.desc}</div>\r\n            <div style={{ color: getColor(row.percent) }}>\r\n              {row.percent > 0 ? \"+\" : \"\"}\r\n              {row.percent}%\r\n            </div>\r\n          </Row>\r\n        );\r\n      })}\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default Price;\r\n","import { atom } from 'recoil';\r\n\r\nexport const isDarkAtom = atom({\r\n    key:\"isDark\",\r\n    default:true,\r\n})","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { isDarkAtom } from \"../atoms\";\r\n\r\ninterface IHistorical {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\n\r\ninterface ChartProps {\r\n  coinId: string;\r\n}\r\n\r\nfunction CandleChart({ coinId }: ChartProps) {\r\n  const isDark = useRecoilValue(isDarkAtom);\r\n  const { isLoading, data } = useQuery<IHistorical[]>([\"ohlcv\", coinId], () =>\r\n    fetchCoinHistory(coinId)\r\n  );\r\n\r\n  return (\r\n    <h1>\r\n      {isLoading ? (\r\n        \"Loading chart...\"\r\n      ) : (\r\n        <ApexChart\r\n          type=\"candlestick\"\r\n          series={[\r\n            {\r\n              data: data?.map((price) => {\r\n                return {\r\n                  x: price.time_open,\r\n                  y: [price.open, price.high, price.low, price.close],\r\n                };\r\n              }),\r\n            },\r\n          ]}\r\n          options={{\r\n            theme: {\r\n              mode: isDark ? \"dark\" : \"light\",\r\n            },\r\n            title: {\r\n              text: `${coinId} 30days Chart`,\r\n              align: \"left\",\r\n            },\r\n            chart: {\r\n              type: \"candlestick\",\r\n              height: 300,\r\n              width: 500,\r\n              id: \"candles\",\r\n              toolbar: {\r\n                autoSelected: \"pan\",\r\n                show: true,\r\n              },\r\n              zoom: {\r\n                enabled: true,\r\n              },\r\n              background: \"transparent\",\r\n            },\r\n            grid: {\r\n              show: false,\r\n            },\r\n            yaxis: {\r\n              show: false,\r\n            },\r\n            xaxis: {\r\n              axisBorder: {\r\n                show: false,\r\n              },\r\n              axisTicks: {\r\n                show: false,\r\n              },\r\n              labels: {\r\n                show: false,\r\n              },\r\n              type: \"datetime\",\r\n            },\r\n            stroke: {\r\n              width: 1,\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </h1>\r\n  );\r\n}\r\n\r\nexport default CandleChart;\r\n","import { useLocation, useMatch, useParams } from \"react-router\";\r\nimport { Routes, Route, Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Price from \"./Price\";\r\nimport { useQuery } from \"react-query\";\r\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport CandleChart from \"./CandleChart\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 20vh;\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Back = styled.div`\r\n  font-size: 30px;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: ${(props) => props.theme.boxColor};\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\n\r\nconst Description = styled.p`\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: ${(props) => props.theme.boxColor};\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 40px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\ninterface RouteParams {\r\n  coinId: string;\r\n}\r\n\r\ninterface IInfoData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  contract: string;\r\n  platform: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\n\r\ninterface ITickersData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\n//https://api.coinpaprika.com/v1/coins/${coinId}\r\n//https://api.coinpaprika.com/v1/tickers/${coinId}\r\nfunction Coin() {\r\n  const { coinId } = useParams() as RouteParams;\r\n  const { state } = useLocation();\r\n  const priceMatch = useMatch(\"/:coinId/price\");\r\n  const chartMatch = useMatch(\"/:coinId/chart\");\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<IInfoData>(\r\n    [\"info\", coinId],\r\n    () => fetchCoinInfo(coinId)\r\n  );\r\n  const { isLoading: tickersLoading, data: tickersData } =\r\n    useQuery<ITickersData>(\r\n      [\"tickers\", coinId],\r\n      () => fetchCoinTickers(coinId),\r\n      {\r\n        refetchInterval: 5000,\r\n      }\r\n    );\r\n  const priceData = tickersData?.quotes.USD;\r\n  const loading = infoLoading || tickersLoading;\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </title>\r\n      </Helmet>\r\n      <Header>\r\n        <Back>\r\n          <Link to={{ pathname: `/` }}>👈🏻</Link>\r\n        </Back>\r\n        <Title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </Title>\r\n        <div></div>\r\n      </Header>\r\n      {loading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>${infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Price:</span>\r\n              <span>${tickersData?.quotes.USD.price.toFixed(3)}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Suply:</span>\r\n              <span>{tickersData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{tickersData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Tabs>\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link to={`/${coinId}/price`}>Price</Link>\r\n            </Tab>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to={`/${coinId}/chart`}>Chart</Link>\r\n            </Tab>\r\n          </Tabs>\r\n\r\n          <Routes>\r\n            <Route path=\"price\" element={<Price priceData={priceData} />} />\r\n            <Route path=\"chart\" element={<CandleChart coinId={coinId} />} />\r\n          </Routes>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coin;\r\n","import { Link } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { isDarkAtom } from \"../atoms\";\r\n\r\nconst Head = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 70px;\r\n  border-bottom: 2px solid ${(props) => props.theme.accentColor};\r\n  padding: 0 50px;\r\n  box-shadow: 0px 3px 30px ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst Home = styled.div`\r\n  font-size: 40px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Toggle = styled.button`\r\n  background-color: ${(props) => props.theme.accentColor};\r\n  color: ${(props) => props.theme.textColor};\r\n  padding: 10px 15px;\r\n  border-radius: 10px;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 20px;\r\n`;\r\n\r\nfunction NavBar() {\r\n  const [isDark, setIsDarkAtom] = useRecoilState(isDarkAtom);\r\n  const toggleIsDarkAtom = () => setIsDarkAtom((prev) => !prev);\r\n\r\n  return (\r\n    <Head>\r\n      <Home>\r\n        <Link\r\n          to={{\r\n            pathname: `/`,\r\n          }}\r\n        >\r\n          NOMAD COIN\r\n        </Link>\r\n      </Home>\r\n      <Toggle onClick={toggleIsDarkAtom}>{isDark ? \"🌜\" : \"🌞\"}</Toggle>\r\n    </Head>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Coins from \"./routes/Coins\";\r\nimport Coin from \"./routes/Coin\";\r\nimport NavBar from \"./components/NavBar\";\r\n\r\nfunction Router() {\r\n  return (\r\n    <BrowserRouter>\r\n      <NavBar />\r\n      <Routes>\r\n        <Route path=\"/\" element={<Coins />} />\r\n        <Route path=\"/:coinId/*\" element={<Coin />} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","import { DefaultTheme } from 'styled-components';\r\n\r\nexport const darkTheme:DefaultTheme = {\r\n    name : \"darkTheme\",\r\n    bgColor:\"#2f3640\",\r\n    boxColor:\"#4d5868\",\r\n    textColor:\"#f3f8ff\",\r\n    accentColor:\"#9c88ff\",\r\n}\r\n\r\nexport const lightTheme:DefaultTheme = {\r\n    name : \"lightTheme\",\r\n    bgColor:\"#e3efff\",\r\n    boxColor:\"#f1f7ff\",\r\n    textColor:\"#2f3640\",\r\n    accentColor:\"#9c88ff\",\r\n}","import { createGlobalStyle, ThemeProvider } from \"styled-components\";\r\nimport Router from \"./Router\";\r\nimport { ReactQueryDevtools } from \"react-query/devtools\";\r\nimport { darkTheme, lightTheme } from \"./theme\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { isDarkAtom } from \"./atoms\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  @import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300&display=swap');\r\n  html, body, div, span, applet, object, iframe,\r\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\n  a, abbr, acronym, address, big, cite, code,\r\n  del, dfn, em, img, ins, kbd, q, s, samp,\r\n  small, strike, strong, sub, sup, tt, var,\r\n  b, u, i, center,\r\n  dl, dt, dd, ol, ul, li,\r\n  fieldset, form, label, legend,\r\n  table, caption, tbody, tfoot, thead, tr, th, td,\r\n  article, aside, canvas, details, embed, \r\n  figure, figcaption, footer, header, hgroup, \r\n  menu, nav, output, ruby, section, summary,\r\n  time, mark, audio, video {\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 0;\r\n    font-size: 100%;\r\n    font: inherit;\r\n    vertical-align: baseline;\r\n  }\r\n  /* HTML5 display-role reset for older browsers */\r\n  article, aside, details, figcaption, figure, \r\n  footer, header, hgroup, menu, nav, section {\r\n    display: block;\r\n  }\r\n  body {\r\n    font-family: 'Source Sans Pro', sans-serif;\r\n    background-color: ${(props) => props.theme.bgColor};\r\n    color: ${(props) => props.theme.textColor};\r\n    line-height: 1;\r\n  }\r\n  ol, ul {\r\n    list-style: none;\r\n  }\r\n  blockquote, q {\r\n    quotes: none;\r\n  }\r\n  blockquote:before, blockquote:after,\r\n  q:before, q:after {\r\n    content: '';\r\n    content: none;\r\n  }\r\n  table {\r\n    border-collapse: collapse;\r\n    border-spacing: 0;\r\n  }\r\n  a{\r\n    text-decoration: none;\r\n    color:inherit;\r\n  }\r\n  *{\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n  const isDark = useRecoilValue(isDarkAtom);\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\r\n        <GlobalStyle />\r\n        <Router />\r\n        <ReactQueryDevtools initialIsOpen={false} />\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { RecoilRoot } from \"recoil\";\r\nimport App from \"./App\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n      <QueryClientProvider client={queryClient}>\r\n        <App />\r\n      </QueryClientProvider>\r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}